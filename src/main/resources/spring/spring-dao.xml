<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
        <!--配置整合mybatis过程-->
        <!--数据库相关参数properties 的属性:${url}-->
        <context:property-placeholder location="classpath:jdbc.properties"/>
        <!--1.数据库连接池配置-->
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
            <!--数据库连接池属性-->
            <property name="driverClassName" value="${jdbc.driver}"/>
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>

            <!--druid私有连接属性-->

            <property name="initialSize" value="10"/>
            <property name="maxActive" value="30"/>
            <property name="minIdle" value="10"/>

            <!--一次连接最大等待时间-->
            <property name="maxWait" value="1500"/>
            <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
            <property name="timeBetweenEvictionRunsMillis" value="60000" />
            <!-- 配置一个连接在池中最小和最大生存的时间，单位是毫秒 -->
            <property name="minEvictableIdleTimeMillis" value="600000" />
            <property name="maxEvictableIdleTimeMillis" value="900000" />


            <property name="validationQuery" value="select 1" />
            <property name="testWhileIdle" value="true" />
            <property name="testOnBorrow" value="false" />
            <property name="testOnReturn" value="false" />

            <property name="keepAlive" value="true" />
            <property name="phyMaxUseCount" value="100000" />
            <!-- 配置监控统计拦截的filters -->
<!--            <property name="filters" value="stat" />-->
        </bean>
    <!--数据会话工厂配置-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
            <property name="dataSource" ref="dataSource"/>
        <!--配置mybatis 全局配置文件-->
            <property name="configLocation" value="classpath:mybatis-config.xml"/>
            <!--扫描实体类包  使用别名-->
            <property name="typeAliasesPackage" value="com.imooc.o2o.pojo"/>
            <!--扫描sql配置文件:mapper需要的xml 文件-->
            <property name="mapperLocations" value="classpath:mappers/*.xml"/>
    </bean>
    <!--4.配置扫描Dao接口包,动态实现dao接口,注入到spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--给出需要扫描的dao接口包-->
        <property name="basePackage" value="com.imooc.o2o.dao"/>
    </bean>
</beans>